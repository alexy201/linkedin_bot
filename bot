from ssl import Options
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.keys import Keys
import pyautogui as pag
import time
from time import sleep
import pandas as pd
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException
import sensative

def goto_network_page(driver, network_url):
    driver.get(network_url)

def login_to_linkedin(driver):
    username = driver.find_element(By.ID,"session_key")
    username.send_keys(sensative.EMAIL)
    password = driver.find_element(By.ID,"session_password")
    password.send_keys(sensative.PASSWORD)
    driver.find_element(By.CLASS_NAME,"sign-in-form__submit-button").click()

def send_requests_to_users(driver):
    path = "//h2[contains(., '%s')]" % sensative.SEARCH
    print(path)
    while True:
        try:
            WebDriverWait(driver, 7).until(
                EC.visibility_of_element_located((By.XPATH, path))
            )
        except:
            driver.refresh()
        else:
            break
    ele = driver.find_element(By.XPATH, path)
    javaScript =  "window.scrollBy(0," + str(ele.rect['y'] - 5) + ");"
    driver.execute_script(javaScript)
    take_a_screenshot(driver)
    #pag.hotkey('command', 't', interval=0.25)
    for i in  range(0, 400):
        pag.click(205, 460) #change based on window
        sleep(0.3) #change to debug
        pag.click(315, 245) #change based on window
        sleep(0.3)
    print("Done !")
    n =  int(input("FINISHED? "))

def take_a_screenshot(driver):
    loc_time = time.localtime()
    time_string = time.strftime("%m/%d/%Y", loc_time)
    driver.save_screenshot("../linkedin/screenshots/"+time_string+"_screenshot.png")

def start_bot(driver,url,network_url):
    driver.get(url)
    login_to_linkedin(driver)
    goto_network_page(driver,network_url)
    send_requests_to_users(driver)

def main():
    options = webdriver.ChromeOptions()
    options.add_argument("--auto-open-devtools-for-tabs")
    options.add_argument("--incognito")
    options.add_argument("--disable-site-isolation-trials") 
    url =  "http://linkedin.com/"
    network_url =  "http://linkedin.com/mynetwork/"
    driver = webdriver.Chrome(options=options, service=Service(ChromeDriverManager().install()))
    start_bot(driver,url,network_url)

main()

"""
var pointerX = -1;
var pointerY = -1;
document.onmousemove = function(event) {
	pointerX = event.pageX;
	pointerY = event.pageY;
}
setInterval(pointerCheck, 1000);
function pointerCheck() {
	console.log('Cursor at: '+pointerX+', '+pointerY);
}
"""
